/* tslint:disable */
/* eslint-disable */
//  This file was automatically generated and should not be edited.

export type CreateCollectionInput = {
  bibliographic_citation?: Array< string > | null,
  collection_category: string,
  collectionmap_id?: string | null,
  collectionOptions?: string | null,
  create_date?: string | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  end_date?: string | null,
  explicit_content?: boolean | null,
  heirarchy_path?: Array< string > | null,
  id?: string | null,
  identifier: string,
  is_part_of?: Array< string > | null,
  language?: Array< string > | null,
  location?: Array< string > | null,
  modified_date?: string | null,
  ownerinfo?: string | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  relation?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  thumbnail_path?: string | null,
  title: string,
  visibility: boolean,
  collectionCollectionmapId?: string | null,
};

export type ModelCollectionConditionInput = {
  bibliographic_citation?: ModelStringInput | null,
  collection_category?: ModelStringInput | null,
  collectionmap_id?: ModelStringInput | null,
  collectionOptions?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  creator?: ModelStringInput | null,
  custom_key?: ModelStringInput | null,
  description?: ModelStringInput | null,
  display_date?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  explicit_content?: ModelBooleanInput | null,
  heirarchy_path?: ModelStringInput | null,
  identifier?: ModelStringInput | null,
  is_part_of?: ModelStringInput | null,
  language?: ModelStringInput | null,
  location?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  ownerinfo?: ModelStringInput | null,
  parent_collection?: ModelStringInput | null,
  provenance?: ModelStringInput | null,
  relation?: ModelStringInput | null,
  rights_holder?: ModelStringInput | null,
  rights?: ModelStringInput | null,
  source?: ModelStringInput | null,
  spatial?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  subject?: ModelStringInput | null,
  thumbnail_path?: ModelStringInput | null,
  title?: ModelStringInput | null,
  visibility?: ModelBooleanInput | null,
  and?: Array< ModelCollectionConditionInput | null > | null,
  or?: Array< ModelCollectionConditionInput | null > | null,
  not?: ModelCollectionConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  collectionCollectionmapId?: ModelIDInput | null,
};

export type ModelStringInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  size?: ModelSizeInput | null,
};

export enum ModelAttributeTypes {
  binary = "binary",
  binarySet = "binarySet",
  bool = "bool",
  list = "list",
  map = "map",
  number = "number",
  numberSet = "numberSet",
  string = "string",
  stringSet = "stringSet",
  _null = "_null",
}


export type ModelSizeInput = {
  ne?: number | null,
  eq?: number | null,
  le?: number | null,
  lt?: number | null,
  ge?: number | null,
  gt?: number | null,
  between?: Array< number | null > | null,
};

export type ModelBooleanInput = {
  ne?: boolean | null,
  eq?: boolean | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
};

export type ModelIDInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  attributeExists?: boolean | null,
  attributeType?: ModelAttributeTypes | null,
  size?: ModelSizeInput | null,
};

export type Collection = {
  __typename: "Collection",
  bibliographic_citation?: Array< string > | null,
  collection_category: string,
  collectionmap_id?: string | null,
  collectionOptions?: string | null,
  create_date?: string | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  end_date?: string | null,
  explicit_content?: boolean | null,
  heirarchy_path?: Array< string > | null,
  id: string,
  identifier: string,
  is_part_of?: Array< string > | null,
  language?: Array< string > | null,
  location?: Array< string > | null,
  modified_date?: string | null,
  ownerinfo?: string | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  relation?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  thumbnail_path?: string | null,
  title: string,
  visibility: boolean,
  collectionmap?: Collectionmap | null,
  archives?: ModelArchiveConnection | null,
  createdAt: string,
  updatedAt: string,
  collectionCollectionmapId?: string | null,
};

export type GenericRecord = {
  __typename: "GenericRecord",
  bibliographic_citation?: Array< string > | null,
  create_date?: string | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  end_date?: string | null,
  heirarchy_path?: Array< string > | null,
  id: string,
  identifier: string,
  is_part_of?: Array< string > | null,
  language?: Array< string > | null,
  location?: Array< string > | null,
  modified_date?: string | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  relation?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  thumbnail_path?: string | null,
  title: string,
  visibility: boolean,
};

export type Archive = {
  __typename: "Archive",
  alternative?: Array< string > | null,
  archiveOptions?: string | null,
  basis_of_record?: Array< string > | null,
  bibliographic_citation?: Array< string > | null,
  conforms_to?: Array< string > | null,
  contributor?: Array< string > | null,
  coverage?: Array< string > | null,
  create_date?: string | null,
  created?: Array< string > | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  date?: Array< string > | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  download_link?: Array< string > | null,
  end_date?: string | null,
  explicit?: boolean | null,
  extent?: Array< string > | null,
  format?: Array< string > | null,
  has_format?: Array< string > | null,
  has_part?: Array< string > | null,
  has_version?: Array< string > | null,
  heirarchy_path?: Array< string > | null,
  id: string,
  identifier: string,
  is_format_of?: Array< string > | null,
  is_part_of?: Array< string > | null,
  is_version_of?: Array< string > | null,
  item_category: string,
  language?: Array< string > | null,
  license?: Array< string > | null,
  location?: Array< string > | null,
  manifest_file_characterization?: string | null,
  manifest_url?: string | null,
  medium?: Array< string > | null,
  modified_date?: string | null,
  other_identifier?: Array< string > | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  publisher?: Array< string > | null,
  references?: Array< string > | null,
  relation?: Array< string > | null,
  repository?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  tags?: Array< string > | null,
  temporal?: Array< string > | null,
  thumbnail_path?: string | null,
  title: string,
  type?: Array< string > | null,
  visibility: boolean,
  collection?: Collection | null,
  createdAt: string,
  updatedAt: string,
  collectionArchivesId?: string | null,
  archiveCollectionId?: string | null,
};

export type Collectionmap = {
  __typename: "Collectionmap",
  collectionmap_category: string,
  collection_id: string,
  create_date?: string | null,
  id: string,
  map_object: string,
  modified_date?: string | null,
  collection?: Collection | null,
  createdAt: string,
  updatedAt: string,
  collectionmapCollectionId?: string | null,
};

export type ModelArchiveConnection = {
  __typename: "ModelArchiveConnection",
  items:  Array<Archive | null >,
  nextToken?: string | null,
};

export type UpdateCollectionInput = {
  bibliographic_citation?: Array< string > | null,
  collection_category?: string | null,
  collectionmap_id?: string | null,
  collectionOptions?: string | null,
  create_date?: string | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  end_date?: string | null,
  explicit_content?: boolean | null,
  heirarchy_path?: Array< string > | null,
  id: string,
  identifier?: string | null,
  is_part_of?: Array< string > | null,
  language?: Array< string > | null,
  location?: Array< string > | null,
  modified_date?: string | null,
  ownerinfo?: string | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  relation?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  thumbnail_path?: string | null,
  title?: string | null,
  visibility?: boolean | null,
  collectionCollectionmapId?: string | null,
};

export type DeleteCollectionInput = {
  id: string,
};

export type CreateCollectionmapInput = {
  collectionmap_category: string,
  collection_id: string,
  create_date?: string | null,
  id?: string | null,
  map_object: string,
  modified_date?: string | null,
  collectionmapCollectionId?: string | null,
};

export type ModelCollectionmapConditionInput = {
  collectionmap_category?: ModelStringInput | null,
  collection_id?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  map_object?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  and?: Array< ModelCollectionmapConditionInput | null > | null,
  or?: Array< ModelCollectionmapConditionInput | null > | null,
  not?: ModelCollectionmapConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  collectionmapCollectionId?: ModelIDInput | null,
};

export type UpdateCollectionmapInput = {
  collectionmap_category?: string | null,
  collection_id?: string | null,
  create_date?: string | null,
  id: string,
  map_object?: string | null,
  modified_date?: string | null,
  collectionmapCollectionId?: string | null,
};

export type DeleteCollectionmapInput = {
  id: string,
};

export type CreatePageContentInput = {
  page_content_category: string,
  id?: string | null,
  content: string,
  pageContentPageContentSiteIdId?: string | null,
};

export type ModelPageContentConditionInput = {
  page_content_category?: ModelStringInput | null,
  content?: ModelStringInput | null,
  and?: Array< ModelPageContentConditionInput | null > | null,
  or?: Array< ModelPageContentConditionInput | null > | null,
  not?: ModelPageContentConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  pageContentPageContentSiteIdId?: ModelIDInput | null,
};

export type PageContent = {
  __typename: "PageContent",
  page_content_category: string,
  id: string,
  content: string,
  pageContentSiteId?: Site | null,
  createdAt: string,
  updatedAt: string,
  pageContentPageContentSiteIdId?: string | null,
};

export type Site = {
  __typename: "Site",
  analyticsID?: string | null,
  assetBasePath?: string | null,
  browseCollections: string,
  contact: Array< string >,
  displayedAttributes: string,
  groups: Array< string | null >,
  homePage: string,
  id: string,
  lang?: string | null,
  miradorOptions?: string | null,
  searchPage: string,
  siteColor?: string | null,
  siteId: string,
  siteName: string,
  siteOptions?: string | null,
  sitePages?: string | null,
  siteTitle: string,
  createdAt: string,
  updatedAt: string,
};

export type UpdatePageContentInput = {
  page_content_category?: string | null,
  id: string,
  content?: string | null,
  pageContentPageContentSiteIdId?: string | null,
};

export type DeletePageContentInput = {
  id: string,
};

export type CreateArchiveInput = {
  alternative?: Array< string > | null,
  archiveOptions?: string | null,
  basis_of_record?: Array< string > | null,
  bibliographic_citation?: Array< string > | null,
  conforms_to?: Array< string > | null,
  contributor?: Array< string > | null,
  coverage?: Array< string > | null,
  create_date?: string | null,
  created?: Array< string > | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  date?: Array< string > | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  download_link?: Array< string > | null,
  end_date?: string | null,
  explicit?: boolean | null,
  extent?: Array< string > | null,
  format?: Array< string > | null,
  has_format?: Array< string > | null,
  has_part?: Array< string > | null,
  has_version?: Array< string > | null,
  heirarchy_path?: Array< string > | null,
  id?: string | null,
  identifier: string,
  is_format_of?: Array< string > | null,
  is_part_of?: Array< string > | null,
  is_version_of?: Array< string > | null,
  item_category: string,
  language?: Array< string > | null,
  license?: Array< string > | null,
  location?: Array< string > | null,
  manifest_file_characterization?: string | null,
  manifest_url?: string | null,
  medium?: Array< string > | null,
  modified_date?: string | null,
  other_identifier?: Array< string > | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  publisher?: Array< string > | null,
  references?: Array< string > | null,
  relation?: Array< string > | null,
  repository?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  tags?: Array< string > | null,
  temporal?: Array< string > | null,
  thumbnail_path?: string | null,
  title: string,
  type?: Array< string > | null,
  visibility: boolean,
  collectionArchivesId?: string | null,
  archiveCollectionId?: string | null,
};

export type ModelArchiveConditionInput = {
  alternative?: ModelStringInput | null,
  archiveOptions?: ModelStringInput | null,
  basis_of_record?: ModelStringInput | null,
  bibliographic_citation?: ModelStringInput | null,
  conforms_to?: ModelStringInput | null,
  contributor?: ModelStringInput | null,
  coverage?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  created?: ModelStringInput | null,
  creator?: ModelStringInput | null,
  custom_key?: ModelStringInput | null,
  date?: ModelStringInput | null,
  description?: ModelStringInput | null,
  display_date?: ModelStringInput | null,
  download_link?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  explicit?: ModelBooleanInput | null,
  extent?: ModelStringInput | null,
  format?: ModelStringInput | null,
  has_format?: ModelStringInput | null,
  has_part?: ModelStringInput | null,
  has_version?: ModelStringInput | null,
  heirarchy_path?: ModelStringInput | null,
  identifier?: ModelStringInput | null,
  is_format_of?: ModelStringInput | null,
  is_part_of?: ModelStringInput | null,
  is_version_of?: ModelStringInput | null,
  item_category?: ModelStringInput | null,
  language?: ModelStringInput | null,
  license?: ModelStringInput | null,
  location?: ModelStringInput | null,
  manifest_file_characterization?: ModelStringInput | null,
  manifest_url?: ModelStringInput | null,
  medium?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  other_identifier?: ModelStringInput | null,
  parent_collection?: ModelStringInput | null,
  provenance?: ModelStringInput | null,
  publisher?: ModelStringInput | null,
  references?: ModelStringInput | null,
  relation?: ModelStringInput | null,
  repository?: ModelStringInput | null,
  rights_holder?: ModelStringInput | null,
  rights?: ModelStringInput | null,
  source?: ModelStringInput | null,
  spatial?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  subject?: ModelStringInput | null,
  tags?: ModelStringInput | null,
  temporal?: ModelStringInput | null,
  thumbnail_path?: ModelStringInput | null,
  title?: ModelStringInput | null,
  type?: ModelStringInput | null,
  visibility?: ModelBooleanInput | null,
  and?: Array< ModelArchiveConditionInput | null > | null,
  or?: Array< ModelArchiveConditionInput | null > | null,
  not?: ModelArchiveConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  collectionArchivesId?: ModelIDInput | null,
  archiveCollectionId?: ModelIDInput | null,
};

export type UpdateArchiveInput = {
  alternative?: Array< string > | null,
  archiveOptions?: string | null,
  basis_of_record?: Array< string > | null,
  bibliographic_citation?: Array< string > | null,
  conforms_to?: Array< string > | null,
  contributor?: Array< string > | null,
  coverage?: Array< string > | null,
  create_date?: string | null,
  created?: Array< string > | null,
  creator?: Array< string > | null,
  custom_key?: string | null,
  date?: Array< string > | null,
  description?: Array< string > | null,
  display_date?: Array< string > | null,
  download_link?: Array< string > | null,
  end_date?: string | null,
  explicit?: boolean | null,
  extent?: Array< string > | null,
  format?: Array< string > | null,
  has_format?: Array< string > | null,
  has_part?: Array< string > | null,
  has_version?: Array< string > | null,
  heirarchy_path?: Array< string > | null,
  id: string,
  identifier?: string | null,
  is_format_of?: Array< string > | null,
  is_part_of?: Array< string > | null,
  is_version_of?: Array< string > | null,
  item_category?: string | null,
  language?: Array< string > | null,
  license?: Array< string > | null,
  location?: Array< string > | null,
  manifest_file_characterization?: string | null,
  manifest_url?: string | null,
  medium?: Array< string > | null,
  modified_date?: string | null,
  other_identifier?: Array< string > | null,
  parent_collection?: Array< string > | null,
  provenance?: Array< string > | null,
  publisher?: Array< string > | null,
  references?: Array< string > | null,
  relation?: Array< string > | null,
  repository?: Array< string > | null,
  rights_holder?: Array< string > | null,
  rights?: Array< string > | null,
  source?: Array< string > | null,
  spatial?: Array< string > | null,
  start_date?: string | null,
  subject?: Array< string > | null,
  tags?: Array< string > | null,
  temporal?: Array< string > | null,
  thumbnail_path?: string | null,
  title?: string | null,
  type?: Array< string > | null,
  visibility?: boolean | null,
  collectionArchivesId?: string | null,
  archiveCollectionId?: string | null,
};

export type DeleteArchiveInput = {
  id: string,
};

export type CreateEmbargoInput = {
  id?: string | null,
  identifier: string,
  start_date?: string | null,
  end_date?: string | null,
  note?: string | null,
  record_type: string,
};

export type ModelEmbargoConditionInput = {
  identifier?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  note?: ModelStringInput | null,
  record_type?: ModelStringInput | null,
  and?: Array< ModelEmbargoConditionInput | null > | null,
  or?: Array< ModelEmbargoConditionInput | null > | null,
  not?: ModelEmbargoConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
};

export type Embargo = {
  __typename: "Embargo",
  id: string,
  identifier: string,
  start_date?: string | null,
  end_date?: string | null,
  note?: string | null,
  record_type: string,
  createdAt: string,
  updatedAt: string,
};

export type UpdateEmbargoInput = {
  id: string,
  identifier?: string | null,
  start_date?: string | null,
  end_date?: string | null,
  note?: string | null,
  record_type?: string | null,
};

export type DeleteEmbargoInput = {
  id: string,
};

export type CreateSiteInput = {
  analyticsID?: string | null,
  assetBasePath?: string | null,
  browseCollections: string,
  contact: Array< string >,
  displayedAttributes: string,
  groups: Array< string | null >,
  homePage: string,
  id?: string | null,
  lang?: string | null,
  miradorOptions?: string | null,
  searchPage: string,
  siteColor?: string | null,
  siteId: string,
  siteName: string,
  siteOptions?: string | null,
  sitePages?: string | null,
  siteTitle: string,
};

export type ModelSiteConditionInput = {
  analyticsID?: ModelStringInput | null,
  assetBasePath?: ModelStringInput | null,
  browseCollections?: ModelStringInput | null,
  contact?: ModelStringInput | null,
  displayedAttributes?: ModelStringInput | null,
  groups?: ModelStringInput | null,
  homePage?: ModelStringInput | null,
  lang?: ModelStringInput | null,
  miradorOptions?: ModelStringInput | null,
  searchPage?: ModelStringInput | null,
  siteColor?: ModelStringInput | null,
  siteId?: ModelStringInput | null,
  siteName?: ModelStringInput | null,
  siteOptions?: ModelStringInput | null,
  sitePages?: ModelStringInput | null,
  siteTitle?: ModelStringInput | null,
  and?: Array< ModelSiteConditionInput | null > | null,
  or?: Array< ModelSiteConditionInput | null > | null,
  not?: ModelSiteConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
};

export type UpdateSiteInput = {
  analyticsID?: string | null,
  assetBasePath?: string | null,
  browseCollections?: string | null,
  contact?: Array< string > | null,
  displayedAttributes?: string | null,
  groups?: Array< string | null > | null,
  homePage?: string | null,
  id: string,
  lang?: string | null,
  miradorOptions?: string | null,
  searchPage?: string | null,
  siteColor?: string | null,
  siteId?: string | null,
  siteName?: string | null,
  siteOptions?: string | null,
  sitePages?: string | null,
  siteTitle?: string | null,
};

export type DeleteSiteInput = {
  id: string,
};

export type CreateHistoryInput = {
  event: string,
  groups: Array< string | null >,
  id?: string | null,
  siteID: string,
  userEmail: string,
};

export type ModelHistoryConditionInput = {
  event?: ModelStringInput | null,
  groups?: ModelStringInput | null,
  siteID?: ModelIDInput | null,
  userEmail?: ModelStringInput | null,
  and?: Array< ModelHistoryConditionInput | null > | null,
  or?: Array< ModelHistoryConditionInput | null > | null,
  not?: ModelHistoryConditionInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
};

export type History = {
  __typename: "History",
  event: string,
  groups: Array< string | null >,
  id: string,
  siteID: string,
  userEmail: string,
  createdAt: string,
  updatedAt: string,
};

export type UpdateHistoryInput = {
  event?: string | null,
  groups?: Array< string | null > | null,
  id: string,
  siteID?: string | null,
  userEmail?: string | null,
};

export type DeleteHistoryInput = {
  id: string,
};

export type SearchableGenericRecordSortInput = {
  field?: SearchableGenericRecordSortableFields | null,
  direction?: SearchableSortDirection | null,
};

export enum SearchableGenericRecordSortableFields {
  id = "id",
  title = "title",
  identifier = "identifier",
  description = "description",
  creator = "creator",
  source = "source",
  start_date = "start_date",
  end_date = "end_date",
  subject = "subject",
  spatial = "spatial",
  language = "language",
  custom_key = "custom_key",
}


export enum SearchableSortDirection {
  asc = "asc",
  desc = "desc",
}


export type SearchableGenericRecordFilterInput = {
  id?: SearchableIDFilterInput | null,
  title?: SearchableStringFilterInput | null,
  identifier?: SearchableStringFilterInput | null,
  description?: SearchableStringFilterInput | null,
  tags?: SearchableStringFilterInput | null,
  creator?: SearchableStringFilterInput | null,
  source?: SearchableStringFilterInput | null,
  start_date?: SearchableStringFilterInput | null,
  end_date?: SearchableStringFilterInput | null,
  subject?: SearchableStringFilterInput | null,
  is_part_of?: SearchableStringFilterInput | null,
  spatial?: SearchableStringFilterInput | null,
  medium?: SearchableStringFilterInput | null,
  rights?: SearchableStringFilterInput | null,
  language?: SearchableStringFilterInput | null,
  type?: SearchableStringFilterInput | null,
  bibliographic_citation?: SearchableStringFilterInput | null,
  rights_holder?: SearchableStringFilterInput | null,
  format?: SearchableStringFilterInput | null,
  custom_key?: SearchableStringFilterInput | null,
  visibility?: SearchableBooleanFilterInput | null,
  heirarchy_path?: SearchableStringFilterInput | null,
  thumbnail_path?: SearchableStringFilterInput | null,
  parent_collection?: SearchableStringFilterInput | null,
  create_date?: SearchableStringFilterInput | null,
  modified_date?: SearchableStringFilterInput | null,
  collection_category?: SearchableStringFilterInput | null,
  item_category?: SearchableStringFilterInput | null,
  and?: Array< SearchableGenericRecordFilterInput | null > | null,
  or?: Array< SearchableGenericRecordFilterInput | null > | null,
  not?: SearchableGenericRecordFilterInput | null,
};

export type SearchableIDFilterInput = {
  ne?: string | null,
  gt?: string | null,
  lt?: string | null,
  gte?: string | null,
  lte?: string | null,
  eq?: string | null,
  match?: string | null,
  matchPhrase?: string | null,
  matchPhrasePrefix?: string | null,
  multiMatch?: string | null,
  exists?: boolean | null,
  wildcard?: string | null,
  regexp?: string | null,
};

export type SearchableStringFilterInput = {
  ne?: string | null,
  gt?: string | null,
  lt?: string | null,
  gte?: string | null,
  lte?: string | null,
  eq?: string | null,
  match?: string | null,
  matchPhrase?: string | null,
  matchPhrasePrefix?: string | null,
  multiMatch?: string | null,
  exists?: boolean | null,
  wildcard?: string | null,
  regexp?: string | null,
};

export type SearchableBooleanFilterInput = {
  eq?: boolean | null,
  ne?: boolean | null,
};

export type SearchableGenericRecordConnection = {
  __typename: "SearchableGenericRecordConnection",
  items?:  Array<GenericRecordType | null > | null,
  nextToken?: string | null,
  total?: number | null,
};

export type GenericRecordType = Collection | Archive


export type SearchableCollectionFilterInput = {
  id?: SearchableIDFilterInput | null,
  title?: SearchableStringFilterInput | null,
  identifier?: SearchableStringFilterInput | null,
  description?: SearchableStringFilterInput | null,
  creator?: SearchableStringFilterInput | null,
  source?: SearchableStringFilterInput | null,
  start_date?: SearchableStringFilterInput | null,
  end_date?: SearchableStringFilterInput | null,
  subject?: SearchableStringFilterInput | null,
  spatial?: SearchableStringFilterInput | null,
  rights?: SearchableStringFilterInput | null,
  language?: SearchableStringFilterInput | null,
  relation?: SearchableStringFilterInput | null,
  provenance?: SearchableStringFilterInput | null,
  is_part_of?: SearchableStringFilterInput | null,
  bibliographic_citation?: SearchableStringFilterInput | null,
  rights_holder?: SearchableStringFilterInput | null,
  custom_key?: SearchableStringFilterInput | null,
  collection_category?: SearchableStringFilterInput | null,
  visibility?: SearchableBooleanFilterInput | null,
  thumbnail_path?: SearchableStringFilterInput | null,
  parent_collection?: SearchableStringFilterInput | null,
  heirarchy_path?: SearchableStringFilterInput | null,
  create_date?: SearchableStringFilterInput | null,
  modified_date?: SearchableStringFilterInput | null,
  and?: Array< SearchableCollectionFilterInput | null > | null,
  or?: Array< SearchableCollectionFilterInput | null > | null,
  not?: SearchableCollectionFilterInput | null,
};

export type SearchableCollectionSortInput = {
  field?: SearchableCollectionSortableFields | null,
  direction?: SearchableSortDirection | null,
};

export enum SearchableCollectionSortableFields {
  id = "id",
  title = "title",
  identifier = "identifier",
  description = "description",
  creator = "creator",
  source = "source",
  start_date = "start_date",
  end_date = "end_date",
  subject = "subject",
  spatial = "spatial",
  rights = "rights",
  language = "language",
  relation = "relation",
  provenance = "provenance",
  is_part_of = "is_part_of",
  bibliographic_citation = "bibliographic_citation",
  rights_holder = "rights_holder",
  custom_key = "custom_key",
  collection_category = "collection_category",
  visibility = "visibility",
  heirarchy_path = "heirarchy_path",
  thumbnail_path = "thumbnail_path",
  parent_collection = "parent_collection",
  create_date = "create_date",
  modified_date = "modified_date",
}


export type SearchableCollectionConnection = {
  __typename: "SearchableCollectionConnection",
  items?:  Array<Collection | null > | null,
  nextToken?: string | null,
  total?: number | null,
};

export type SearchableArchiveFilterInput = {
  id?: SearchableIDFilterInput | null,
  title?: SearchableStringFilterInput | null,
  identifier?: SearchableStringFilterInput | null,
  description?: SearchableStringFilterInput | null,
  tags?: SearchableStringFilterInput | null,
  creator?: SearchableStringFilterInput | null,
  source?: SearchableStringFilterInput | null,
  start_date?: SearchableStringFilterInput | null,
  end_date?: SearchableStringFilterInput | null,
  subject?: SearchableStringFilterInput | null,
  rights?: SearchableStringFilterInput | null,
  language?: SearchableStringFilterInput | null,
  type?: SearchableStringFilterInput | null,
  is_part_of?: SearchableStringFilterInput | null,
  spatial?: SearchableStringFilterInput | null,
  medium?: SearchableStringFilterInput | null,
  bibliographic_citation?: SearchableStringFilterInput | null,
  rights_holder?: SearchableStringFilterInput | null,
  format?: SearchableStringFilterInput | null,
  relation?: SearchableStringFilterInput | null,
  provenance?: SearchableStringFilterInput | null,
  repository?: SearchableStringFilterInput | null,
  references?: SearchableStringFilterInput | null,
  contributor?: SearchableStringFilterInput | null,
  custom_key?: SearchableStringFilterInput | null,
  parent_collection?: SearchableStringFilterInput | null,
  item_category?: SearchableStringFilterInput | null,
  visibility?: SearchableBooleanFilterInput | null,
  thumbnail_path?: SearchableStringFilterInput | null,
  manifest_url?: SearchableStringFilterInput | null,
  create_date?: SearchableStringFilterInput | null,
  modified_date?: SearchableStringFilterInput | null,
  heirarchy_path?: SearchableStringFilterInput | null,
  and?: Array< SearchableArchiveFilterInput | null > | null,
  or?: Array< SearchableArchiveFilterInput | null > | null,
  not?: SearchableArchiveFilterInput | null,
};

export type SearchableArchiveSortInput = {
  field?: SearchableArchiveSortableFields | null,
  direction?: SearchableSortDirection | null,
};

export enum SearchableArchiveSortableFields {
  id = "id",
  title = "title",
  identifier = "identifier",
  description = "description",
  tags = "tags",
  creator = "creator",
  source = "source",
  start_date = "start_date",
  end_date = "end_date",
  subject = "subject",
  rights = "rights",
  language = "language",
  type = "type",
  is_part_of = "is_part_of",
  spatial = "spatial",
  medium = "medium",
  bibliographic_citation = "bibliographic_citation",
  rights_holder = "rights_holder",
  format = "format",
  relation = "relation",
  provenance = "provenance",
  repository = "repository",
  references = "references",
  contributor = "contributor",
  custom_key = "custom_key",
  parent_collection = "parent_collection",
  item_category = "item_category",
  visibility = "visibility",
  heirarchy_path = "heirarchy_path",
  thumbnail_path = "thumbnail_path",
  manifest_url = "manifest_url",
  create_date = "create_date",
  modified_date = "modified_date",
}


export type SearchableArchiveConnection = {
  __typename: "SearchableArchiveConnection",
  items?:  Array<Archive | null > | null,
  nextToken?: string | null,
  total?: number | null,
};

export type SearchableCollectionAggregationInput = {
  name: string,
  type: SearchableAggregateType,
  field: SearchableCollectionAggregateField,
};

export enum SearchableAggregateType {
  terms = "terms",
  avg = "avg",
  min = "min",
  max = "max",
  sum = "sum",
  cardinality = "cardinality",
}


export enum SearchableCollectionAggregateField {
  bibliographic_citation = "bibliographic_citation",
  collection_category = "collection_category",
  collectionmap_id = "collectionmap_id",
  collectionOptions = "collectionOptions",
  create_date = "create_date",
  creator = "creator",
  custom_key = "custom_key",
  description = "description",
  display_date = "display_date",
  end_date = "end_date",
  explicit_content = "explicit_content",
  heirarchy_path = "heirarchy_path",
  id = "id",
  identifier = "identifier",
  is_part_of = "is_part_of",
  language = "language",
  location = "location",
  modified_date = "modified_date",
  ownerinfo = "ownerinfo",
  parent_collection = "parent_collection",
  provenance = "provenance",
  relation = "relation",
  rights_holder = "rights_holder",
  rights = "rights",
  source = "source",
  spatial = "spatial",
  start_date = "start_date",
  subject = "subject",
  thumbnail_path = "thumbnail_path",
  title = "title",
  visibility = "visibility",
  createdAt = "createdAt",
  updatedAt = "updatedAt",
  collectionCollectionmapId = "collectionCollectionmapId",
}


export type SearchableArchiveAggregationInput = {
  name: string,
  type: SearchableAggregateType,
  field: SearchableArchiveAggregateField,
};

export enum SearchableArchiveAggregateField {
  alternative = "alternative",
  archiveOptions = "archiveOptions",
  basis_of_record = "basis_of_record",
  bibliographic_citation = "bibliographic_citation",
  conforms_to = "conforms_to",
  contributor = "contributor",
  coverage = "coverage",
  create_date = "create_date",
  created = "created",
  creator = "creator",
  custom_key = "custom_key",
  date = "date",
  description = "description",
  display_date = "display_date",
  download_link = "download_link",
  end_date = "end_date",
  explicit = "explicit",
  extent = "extent",
  format = "format",
  has_format = "has_format",
  has_part = "has_part",
  has_version = "has_version",
  heirarchy_path = "heirarchy_path",
  id = "id",
  identifier = "identifier",
  is_format_of = "is_format_of",
  is_part_of = "is_part_of",
  is_version_of = "is_version_of",
  item_category = "item_category",
  language = "language",
  license = "license",
  location = "location",
  manifest_file_characterization = "manifest_file_characterization",
  manifest_url = "manifest_url",
  medium = "medium",
  modified_date = "modified_date",
  other_identifier = "other_identifier",
  parent_collection = "parent_collection",
  provenance = "provenance",
  publisher = "publisher",
  references = "references",
  relation = "relation",
  repository = "repository",
  rights_holder = "rights_holder",
  rights = "rights",
  source = "source",
  spatial = "spatial",
  start_date = "start_date",
  subject = "subject",
  tags = "tags",
  temporal = "temporal",
  thumbnail_path = "thumbnail_path",
  title = "title",
  type = "type",
  visibility = "visibility",
  createdAt = "createdAt",
  updatedAt = "updatedAt",
  collectionArchivesId = "collectionArchivesId",
  archiveCollectionId = "archiveCollectionId",
}


export type ModelCollectionFilterInput = {
  bibliographic_citation?: ModelStringInput | null,
  collection_category?: ModelStringInput | null,
  collectionmap_id?: ModelStringInput | null,
  collectionOptions?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  creator?: ModelStringInput | null,
  custom_key?: ModelStringInput | null,
  description?: ModelStringInput | null,
  display_date?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  explicit_content?: ModelBooleanInput | null,
  heirarchy_path?: ModelStringInput | null,
  id?: ModelIDInput | null,
  identifier?: ModelStringInput | null,
  is_part_of?: ModelStringInput | null,
  language?: ModelStringInput | null,
  location?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  ownerinfo?: ModelStringInput | null,
  parent_collection?: ModelStringInput | null,
  provenance?: ModelStringInput | null,
  relation?: ModelStringInput | null,
  rights_holder?: ModelStringInput | null,
  rights?: ModelStringInput | null,
  source?: ModelStringInput | null,
  spatial?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  subject?: ModelStringInput | null,
  thumbnail_path?: ModelStringInput | null,
  title?: ModelStringInput | null,
  visibility?: ModelBooleanInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelCollectionFilterInput | null > | null,
  or?: Array< ModelCollectionFilterInput | null > | null,
  not?: ModelCollectionFilterInput | null,
  collectionCollectionmapId?: ModelIDInput | null,
};

export type ModelCollectionConnection = {
  __typename: "ModelCollectionConnection",
  items:  Array<Collection | null >,
  nextToken?: string | null,
};

export type ModelCollectionmapFilterInput = {
  collectionmap_category?: ModelStringInput | null,
  collection_id?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  id?: ModelIDInput | null,
  map_object?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelCollectionmapFilterInput | null > | null,
  or?: Array< ModelCollectionmapFilterInput | null > | null,
  not?: ModelCollectionmapFilterInput | null,
  collectionmapCollectionId?: ModelIDInput | null,
};

export type ModelCollectionmapConnection = {
  __typename: "ModelCollectionmapConnection",
  items:  Array<Collectionmap | null >,
  nextToken?: string | null,
};

export type ModelPageContentFilterInput = {
  page_content_category?: ModelStringInput | null,
  id?: ModelIDInput | null,
  content?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelPageContentFilterInput | null > | null,
  or?: Array< ModelPageContentFilterInput | null > | null,
  not?: ModelPageContentFilterInput | null,
  pageContentPageContentSiteIdId?: ModelIDInput | null,
};

export type ModelPageContentConnection = {
  __typename: "ModelPageContentConnection",
  items:  Array<PageContent | null >,
  nextToken?: string | null,
};

export type ModelArchiveFilterInput = {
  alternative?: ModelStringInput | null,
  archiveOptions?: ModelStringInput | null,
  basis_of_record?: ModelStringInput | null,
  bibliographic_citation?: ModelStringInput | null,
  conforms_to?: ModelStringInput | null,
  contributor?: ModelStringInput | null,
  coverage?: ModelStringInput | null,
  create_date?: ModelStringInput | null,
  created?: ModelStringInput | null,
  creator?: ModelStringInput | null,
  custom_key?: ModelStringInput | null,
  date?: ModelStringInput | null,
  description?: ModelStringInput | null,
  display_date?: ModelStringInput | null,
  download_link?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  explicit?: ModelBooleanInput | null,
  extent?: ModelStringInput | null,
  format?: ModelStringInput | null,
  has_format?: ModelStringInput | null,
  has_part?: ModelStringInput | null,
  has_version?: ModelStringInput | null,
  heirarchy_path?: ModelStringInput | null,
  id?: ModelIDInput | null,
  identifier?: ModelStringInput | null,
  is_format_of?: ModelStringInput | null,
  is_part_of?: ModelStringInput | null,
  is_version_of?: ModelStringInput | null,
  item_category?: ModelStringInput | null,
  language?: ModelStringInput | null,
  license?: ModelStringInput | null,
  location?: ModelStringInput | null,
  manifest_file_characterization?: ModelStringInput | null,
  manifest_url?: ModelStringInput | null,
  medium?: ModelStringInput | null,
  modified_date?: ModelStringInput | null,
  other_identifier?: ModelStringInput | null,
  parent_collection?: ModelStringInput | null,
  provenance?: ModelStringInput | null,
  publisher?: ModelStringInput | null,
  references?: ModelStringInput | null,
  relation?: ModelStringInput | null,
  repository?: ModelStringInput | null,
  rights_holder?: ModelStringInput | null,
  rights?: ModelStringInput | null,
  source?: ModelStringInput | null,
  spatial?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  subject?: ModelStringInput | null,
  tags?: ModelStringInput | null,
  temporal?: ModelStringInput | null,
  thumbnail_path?: ModelStringInput | null,
  title?: ModelStringInput | null,
  type?: ModelStringInput | null,
  visibility?: ModelBooleanInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelArchiveFilterInput | null > | null,
  or?: Array< ModelArchiveFilterInput | null > | null,
  not?: ModelArchiveFilterInput | null,
  collectionArchivesId?: ModelIDInput | null,
  archiveCollectionId?: ModelIDInput | null,
};

export type ModelEmbargoFilterInput = {
  id?: ModelIDInput | null,
  identifier?: ModelStringInput | null,
  start_date?: ModelStringInput | null,
  end_date?: ModelStringInput | null,
  note?: ModelStringInput | null,
  record_type?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelEmbargoFilterInput | null > | null,
  or?: Array< ModelEmbargoFilterInput | null > | null,
  not?: ModelEmbargoFilterInput | null,
};

export type ModelEmbargoConnection = {
  __typename: "ModelEmbargoConnection",
  items:  Array<Embargo | null >,
  nextToken?: string | null,
};

export type ModelSiteFilterInput = {
  analyticsID?: ModelStringInput | null,
  assetBasePath?: ModelStringInput | null,
  browseCollections?: ModelStringInput | null,
  contact?: ModelStringInput | null,
  displayedAttributes?: ModelStringInput | null,
  groups?: ModelStringInput | null,
  homePage?: ModelStringInput | null,
  id?: ModelIDInput | null,
  lang?: ModelStringInput | null,
  miradorOptions?: ModelStringInput | null,
  searchPage?: ModelStringInput | null,
  siteColor?: ModelStringInput | null,
  siteId?: ModelStringInput | null,
  siteName?: ModelStringInput | null,
  siteOptions?: ModelStringInput | null,
  sitePages?: ModelStringInput | null,
  siteTitle?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelSiteFilterInput | null > | null,
  or?: Array< ModelSiteFilterInput | null > | null,
  not?: ModelSiteFilterInput | null,
};

export type ModelSiteConnection = {
  __typename: "ModelSiteConnection",
  items:  Array<Site | null >,
  nextToken?: string | null,
};

export type ModelHistoryFilterInput = {
  event?: ModelStringInput | null,
  groups?: ModelStringInput | null,
  id?: ModelIDInput | null,
  siteID?: ModelIDInput | null,
  userEmail?: ModelStringInput | null,
  createdAt?: ModelStringInput | null,
  updatedAt?: ModelStringInput | null,
  and?: Array< ModelHistoryFilterInput | null > | null,
  or?: Array< ModelHistoryFilterInput | null > | null,
  not?: ModelHistoryFilterInput | null,
};

export type ModelHistoryConnection = {
  __typename: "ModelHistoryConnection",
  items:  Array<History | null >,
  nextToken?: string | null,
};

export enum ModelSortDirection {
  ASC = "ASC",
  DESC = "DESC",
}


export type ModelSubscriptionCollectionFilterInput = {
  bibliographic_citation?: ModelSubscriptionStringInput | null,
  collection_category?: ModelSubscriptionStringInput | null,
  collectionmap_id?: ModelSubscriptionStringInput | null,
  collectionOptions?: ModelSubscriptionStringInput | null,
  create_date?: ModelSubscriptionStringInput | null,
  creator?: ModelSubscriptionStringInput | null,
  custom_key?: ModelSubscriptionStringInput | null,
  description?: ModelSubscriptionStringInput | null,
  display_date?: ModelSubscriptionStringInput | null,
  end_date?: ModelSubscriptionStringInput | null,
  explicit_content?: ModelSubscriptionBooleanInput | null,
  heirarchy_path?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  identifier?: ModelSubscriptionStringInput | null,
  is_part_of?: ModelSubscriptionStringInput | null,
  language?: ModelSubscriptionStringInput | null,
  location?: ModelSubscriptionStringInput | null,
  modified_date?: ModelSubscriptionStringInput | null,
  ownerinfo?: ModelSubscriptionStringInput | null,
  parent_collection?: ModelSubscriptionStringInput | null,
  provenance?: ModelSubscriptionStringInput | null,
  relation?: ModelSubscriptionStringInput | null,
  rights_holder?: ModelSubscriptionStringInput | null,
  rights?: ModelSubscriptionStringInput | null,
  source?: ModelSubscriptionStringInput | null,
  spatial?: ModelSubscriptionStringInput | null,
  start_date?: ModelSubscriptionStringInput | null,
  subject?: ModelSubscriptionStringInput | null,
  thumbnail_path?: ModelSubscriptionStringInput | null,
  title?: ModelSubscriptionStringInput | null,
  visibility?: ModelSubscriptionBooleanInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionCollectionFilterInput | null > | null,
  or?: Array< ModelSubscriptionCollectionFilterInput | null > | null,
  collectionArchivesId?: ModelSubscriptionIDInput | null,
  collectionCollectionmapId?: ModelSubscriptionIDInput | null,
};

export type ModelSubscriptionStringInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  in?: Array< string | null > | null,
  notIn?: Array< string | null > | null,
};

export type ModelSubscriptionBooleanInput = {
  ne?: boolean | null,
  eq?: boolean | null,
};

export type ModelSubscriptionIDInput = {
  ne?: string | null,
  eq?: string | null,
  le?: string | null,
  lt?: string | null,
  ge?: string | null,
  gt?: string | null,
  contains?: string | null,
  notContains?: string | null,
  between?: Array< string | null > | null,
  beginsWith?: string | null,
  in?: Array< string | null > | null,
  notIn?: Array< string | null > | null,
};

export type ModelSubscriptionCollectionmapFilterInput = {
  collectionmap_category?: ModelSubscriptionStringInput | null,
  collection_id?: ModelSubscriptionStringInput | null,
  create_date?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  map_object?: ModelSubscriptionStringInput | null,
  modified_date?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionCollectionmapFilterInput | null > | null,
  or?: Array< ModelSubscriptionCollectionmapFilterInput | null > | null,
  collectionmapCollectionId?: ModelSubscriptionIDInput | null,
};

export type ModelSubscriptionPageContentFilterInput = {
  page_content_category?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  content?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionPageContentFilterInput | null > | null,
  or?: Array< ModelSubscriptionPageContentFilterInput | null > | null,
  pageContentPageContentSiteIdId?: ModelSubscriptionIDInput | null,
};

export type ModelSubscriptionArchiveFilterInput = {
  alternative?: ModelSubscriptionStringInput | null,
  archiveOptions?: ModelSubscriptionStringInput | null,
  basis_of_record?: ModelSubscriptionStringInput | null,
  bibliographic_citation?: ModelSubscriptionStringInput | null,
  conforms_to?: ModelSubscriptionStringInput | null,
  contributor?: ModelSubscriptionStringInput | null,
  coverage?: ModelSubscriptionStringInput | null,
  create_date?: ModelSubscriptionStringInput | null,
  created?: ModelSubscriptionStringInput | null,
  creator?: ModelSubscriptionStringInput | null,
  custom_key?: ModelSubscriptionStringInput | null,
  date?: ModelSubscriptionStringInput | null,
  description?: ModelSubscriptionStringInput | null,
  display_date?: ModelSubscriptionStringInput | null,
  download_link?: ModelSubscriptionStringInput | null,
  end_date?: ModelSubscriptionStringInput | null,
  explicit?: ModelSubscriptionBooleanInput | null,
  extent?: ModelSubscriptionStringInput | null,
  format?: ModelSubscriptionStringInput | null,
  has_format?: ModelSubscriptionStringInput | null,
  has_part?: ModelSubscriptionStringInput | null,
  has_version?: ModelSubscriptionStringInput | null,
  heirarchy_path?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  identifier?: ModelSubscriptionStringInput | null,
  is_format_of?: ModelSubscriptionStringInput | null,
  is_part_of?: ModelSubscriptionStringInput | null,
  is_version_of?: ModelSubscriptionStringInput | null,
  item_category?: ModelSubscriptionStringInput | null,
  language?: ModelSubscriptionStringInput | null,
  license?: ModelSubscriptionStringInput | null,
  location?: ModelSubscriptionStringInput | null,
  manifest_file_characterization?: ModelSubscriptionStringInput | null,
  manifest_url?: ModelSubscriptionStringInput | null,
  medium?: ModelSubscriptionStringInput | null,
  modified_date?: ModelSubscriptionStringInput | null,
  other_identifier?: ModelSubscriptionStringInput | null,
  parent_collection?: ModelSubscriptionStringInput | null,
  provenance?: ModelSubscriptionStringInput | null,
  publisher?: ModelSubscriptionStringInput | null,
  references?: ModelSubscriptionStringInput | null,
  relation?: ModelSubscriptionStringInput | null,
  repository?: ModelSubscriptionStringInput | null,
  rights_holder?: ModelSubscriptionStringInput | null,
  rights?: ModelSubscriptionStringInput | null,
  source?: ModelSubscriptionStringInput | null,
  spatial?: ModelSubscriptionStringInput | null,
  start_date?: ModelSubscriptionStringInput | null,
  subject?: ModelSubscriptionStringInput | null,
  tags?: ModelSubscriptionStringInput | null,
  temporal?: ModelSubscriptionStringInput | null,
  thumbnail_path?: ModelSubscriptionStringInput | null,
  title?: ModelSubscriptionStringInput | null,
  type?: ModelSubscriptionStringInput | null,
  visibility?: ModelSubscriptionBooleanInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionArchiveFilterInput | null > | null,
  or?: Array< ModelSubscriptionArchiveFilterInput | null > | null,
  archiveCollectionId?: ModelSubscriptionIDInput | null,
};

export type ModelSubscriptionEmbargoFilterInput = {
  id?: ModelSubscriptionIDInput | null,
  identifier?: ModelSubscriptionStringInput | null,
  start_date?: ModelSubscriptionStringInput | null,
  end_date?: ModelSubscriptionStringInput | null,
  note?: ModelSubscriptionStringInput | null,
  record_type?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionEmbargoFilterInput | null > | null,
  or?: Array< ModelSubscriptionEmbargoFilterInput | null > | null,
};

export type ModelSubscriptionSiteFilterInput = {
  analyticsID?: ModelSubscriptionStringInput | null,
  assetBasePath?: ModelSubscriptionStringInput | null,
  browseCollections?: ModelSubscriptionStringInput | null,
  contact?: ModelSubscriptionStringInput | null,
  displayedAttributes?: ModelSubscriptionStringInput | null,
  groups?: ModelSubscriptionStringInput | null,
  homePage?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  lang?: ModelSubscriptionStringInput | null,
  miradorOptions?: ModelSubscriptionStringInput | null,
  searchPage?: ModelSubscriptionStringInput | null,
  siteColor?: ModelSubscriptionStringInput | null,
  siteId?: ModelSubscriptionStringInput | null,
  siteName?: ModelSubscriptionStringInput | null,
  siteOptions?: ModelSubscriptionStringInput | null,
  sitePages?: ModelSubscriptionStringInput | null,
  siteTitle?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionSiteFilterInput | null > | null,
  or?: Array< ModelSubscriptionSiteFilterInput | null > | null,
};

export type ModelSubscriptionHistoryFilterInput = {
  event?: ModelSubscriptionStringInput | null,
  groups?: ModelSubscriptionStringInput | null,
  id?: ModelSubscriptionIDInput | null,
  siteID?: ModelSubscriptionIDInput | null,
  userEmail?: ModelSubscriptionStringInput | null,
  createdAt?: ModelSubscriptionStringInput | null,
  updatedAt?: ModelSubscriptionStringInput | null,
  and?: Array< ModelSubscriptionHistoryFilterInput | null > | null,
  or?: Array< ModelSubscriptionHistoryFilterInput | null > | null,
};

export type CreateCollectionMutationVariables = {
  input: CreateCollectionInput,
  condition?: ModelCollectionConditionInput | null,
};

export type CreateCollectionMutation = {
  createCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type UpdateCollectionMutationVariables = {
  input: UpdateCollectionInput,
  condition?: ModelCollectionConditionInput | null,
};

export type UpdateCollectionMutation = {
  updateCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type DeleteCollectionMutationVariables = {
  input: DeleteCollectionInput,
  condition?: ModelCollectionConditionInput | null,
};

export type DeleteCollectionMutation = {
  deleteCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type CreateCollectionmapMutationVariables = {
  input: CreateCollectionmapInput,
  condition?: ModelCollectionmapConditionInput | null,
};

export type CreateCollectionmapMutation = {
  createCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type UpdateCollectionmapMutationVariables = {
  input: UpdateCollectionmapInput,
  condition?: ModelCollectionmapConditionInput | null,
};

export type UpdateCollectionmapMutation = {
  updateCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type DeleteCollectionmapMutationVariables = {
  input: DeleteCollectionmapInput,
  condition?: ModelCollectionmapConditionInput | null,
};

export type DeleteCollectionmapMutation = {
  deleteCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type CreatePageContentMutationVariables = {
  input: CreatePageContentInput,
  condition?: ModelPageContentConditionInput | null,
};

export type CreatePageContentMutation = {
  createPageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type UpdatePageContentMutationVariables = {
  input: UpdatePageContentInput,
  condition?: ModelPageContentConditionInput | null,
};

export type UpdatePageContentMutation = {
  updatePageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type DeletePageContentMutationVariables = {
  input: DeletePageContentInput,
  condition?: ModelPageContentConditionInput | null,
};

export type DeletePageContentMutation = {
  deletePageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type CreateArchiveMutationVariables = {
  input: CreateArchiveInput,
  condition?: ModelArchiveConditionInput | null,
};

export type CreateArchiveMutation = {
  createArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type UpdateArchiveMutationVariables = {
  input: UpdateArchiveInput,
  condition?: ModelArchiveConditionInput | null,
};

export type UpdateArchiveMutation = {
  updateArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type DeleteArchiveMutationVariables = {
  input: DeleteArchiveInput,
  condition?: ModelArchiveConditionInput | null,
};

export type DeleteArchiveMutation = {
  deleteArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type CreateEmbargoMutationVariables = {
  input: CreateEmbargoInput,
  condition?: ModelEmbargoConditionInput | null,
};

export type CreateEmbargoMutation = {
  createEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type UpdateEmbargoMutationVariables = {
  input: UpdateEmbargoInput,
  condition?: ModelEmbargoConditionInput | null,
};

export type UpdateEmbargoMutation = {
  updateEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type DeleteEmbargoMutationVariables = {
  input: DeleteEmbargoInput,
  condition?: ModelEmbargoConditionInput | null,
};

export type DeleteEmbargoMutation = {
  deleteEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type CreateSiteMutationVariables = {
  input: CreateSiteInput,
  condition?: ModelSiteConditionInput | null,
};

export type CreateSiteMutation = {
  createSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type UpdateSiteMutationVariables = {
  input: UpdateSiteInput,
  condition?: ModelSiteConditionInput | null,
};

export type UpdateSiteMutation = {
  updateSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type DeleteSiteMutationVariables = {
  input: DeleteSiteInput,
  condition?: ModelSiteConditionInput | null,
};

export type DeleteSiteMutation = {
  deleteSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type CreateHistoryMutationVariables = {
  input: CreateHistoryInput,
  condition?: ModelHistoryConditionInput | null,
};

export type CreateHistoryMutation = {
  createHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type UpdateHistoryMutationVariables = {
  input: UpdateHistoryInput,
  condition?: ModelHistoryConditionInput | null,
};

export type UpdateHistoryMutation = {
  updateHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type DeleteHistoryMutationVariables = {
  input: DeleteHistoryInput,
  condition?: ModelHistoryConditionInput | null,
};

export type DeleteHistoryMutation = {
  deleteHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type SearchGenericRecordsQueryVariables = {
  allFields?: string | null,
  sort?: SearchableGenericRecordSortInput | null,
  filter?: SearchableGenericRecordFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type SearchGenericRecordsQuery = {
  searchGenericRecords?:  {
    __typename: "SearchableGenericRecordConnection",
    items:  Array<( {
        __typename: "Collection",
        bibliographic_citation?: Array< string > | null,
        collection_category: string,
        collectionmap_id?: string | null,
        collectionOptions?: string | null,
        create_date?: string | null,
        creator?: Array< string > | null,
        custom_key?: string | null,
        description?: Array< string > | null,
        display_date?: Array< string > | null,
        end_date?: string | null,
        explicit_content?: boolean | null,
        heirarchy_path?: Array< string > | null,
        id: string,
        identifier: string,
        is_part_of?: Array< string > | null,
        language?: Array< string > | null,
        location?: Array< string > | null,
        modified_date?: string | null,
        ownerinfo?: string | null,
        parent_collection?: Array< string > | null,
        provenance?: Array< string > | null,
        relation?: Array< string > | null,
        rights_holder?: Array< string > | null,
        rights?: Array< string > | null,
        source?: Array< string > | null,
        spatial?: Array< string > | null,
        start_date?: string | null,
        subject?: Array< string > | null,
        thumbnail_path?: string | null,
        title: string,
        visibility: boolean,
        createdAt: string,
        updatedAt: string,
        collectionCollectionmapId?: string | null,
      } | {
        __typename: "Archive",
        alternative?: Array< string > | null,
        archiveOptions?: string | null,
        basis_of_record?: Array< string > | null,
        bibliographic_citation?: Array< string > | null,
        conforms_to?: Array< string > | null,
        contributor?: Array< string > | null,
        coverage?: Array< string > | null,
        create_date?: string | null,
        created?: Array< string > | null,
        creator?: Array< string > | null,
        custom_key?: string | null,
        date?: Array< string > | null,
        description?: Array< string > | null,
        display_date?: Array< string > | null,
        download_link?: Array< string > | null,
        end_date?: string | null,
        explicit?: boolean | null,
        extent?: Array< string > | null,
        format?: Array< string > | null,
        has_format?: Array< string > | null,
        has_part?: Array< string > | null,
        has_version?: Array< string > | null,
        heirarchy_path?: Array< string > | null,
        id: string,
        identifier: string,
        is_format_of?: Array< string > | null,
        is_part_of?: Array< string > | null,
        is_version_of?: Array< string > | null,
        item_category: string,
        language?: Array< string > | null,
        license?: Array< string > | null,
        location?: Array< string > | null,
        manifest_file_characterization?: string | null,
        manifest_url?: string | null,
        medium?: Array< string > | null,
        modified_date?: string | null,
        other_identifier?: Array< string > | null,
        parent_collection?: Array< string > | null,
        provenance?: Array< string > | null,
        publisher?: Array< string > | null,
        references?: Array< string > | null,
        relation?: Array< string > | null,
        repository?: Array< string > | null,
        rights_holder?: Array< string > | null,
        rights?: Array< string > | null,
        source?: Array< string > | null,
        spatial?: Array< string > | null,
        start_date?: string | null,
        subject?: Array< string > | null,
        tags?: Array< string > | null,
        temporal?: Array< string > | null,
        thumbnail_path?: string | null,
        title: string,
        type?: Array< string > | null,
        visibility: boolean,
        createdAt: string,
        updatedAt: string,
        collectionArchivesId?: string | null,
        archiveCollectionId?: string | null,
      }
    ) | null > | null,
    nextToken?: string | null,
    total?: number | null,
  } | null,
};

export type FulltextCollectionsQueryVariables = {
  allFields?: string | null,
  filter?: SearchableCollectionFilterInput | null,
  sort?: SearchableCollectionSortInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type FulltextCollectionsQuery = {
  fulltextCollections?:  {
    __typename: "SearchableCollectionConnection",
    items?:  Array< {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null > | null,
    nextToken?: string | null,
    total?: number | null,
  } | null,
};

export type FulltextArchivesQueryVariables = {
  allFields?: string | null,
  filter?: SearchableArchiveFilterInput | null,
  sort?: SearchableArchiveSortInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type FulltextArchivesQuery = {
  fulltextArchives?:  {
    __typename: "SearchableArchiveConnection",
    items?:  Array< {
      __typename: "Archive",
      alternative?: Array< string > | null,
      archiveOptions?: string | null,
      basis_of_record?: Array< string > | null,
      bibliographic_citation?: Array< string > | null,
      conforms_to?: Array< string > | null,
      contributor?: Array< string > | null,
      coverage?: Array< string > | null,
      create_date?: string | null,
      created?: Array< string > | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      date?: Array< string > | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      download_link?: Array< string > | null,
      end_date?: string | null,
      explicit?: boolean | null,
      extent?: Array< string > | null,
      format?: Array< string > | null,
      has_format?: Array< string > | null,
      has_part?: Array< string > | null,
      has_version?: Array< string > | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_format_of?: Array< string > | null,
      is_part_of?: Array< string > | null,
      is_version_of?: Array< string > | null,
      item_category: string,
      language?: Array< string > | null,
      license?: Array< string > | null,
      location?: Array< string > | null,
      manifest_file_characterization?: string | null,
      manifest_url?: string | null,
      medium?: Array< string > | null,
      modified_date?: string | null,
      other_identifier?: Array< string > | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      publisher?: Array< string > | null,
      references?: Array< string > | null,
      relation?: Array< string > | null,
      repository?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      tags?: Array< string > | null,
      temporal?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      type?: Array< string > | null,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionArchivesId?: string | null,
      archiveCollectionId?: string | null,
    } | null > | null,
    nextToken?: string | null,
    total?: number | null,
  } | null,
};

export type SearchCollectionsQueryVariables = {
  filter?: SearchableCollectionFilterInput | null,
  sort?: Array< SearchableCollectionSortInput | null > | null,
  limit?: number | null,
  nextToken?: string | null,
  from?: number | null,
  aggregates?: Array< SearchableCollectionAggregationInput | null > | null,
};

export type SearchCollectionsQuery = {
  searchCollections?:  {
    __typename: "SearchableCollectionConnection",
    items?:  Array< {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null > | null,
    nextToken?: string | null,
    total?: number | null,
  } | null,
};

export type SearchArchivesQueryVariables = {
  filter?: SearchableArchiveFilterInput | null,
  sort?: Array< SearchableArchiveSortInput | null > | null,
  limit?: number | null,
  nextToken?: string | null,
  from?: number | null,
  aggregates?: Array< SearchableArchiveAggregationInput | null > | null,
};

export type SearchArchivesQuery = {
  searchArchives?:  {
    __typename: "SearchableArchiveConnection",
    items?:  Array< {
      __typename: "Archive",
      alternative?: Array< string > | null,
      archiveOptions?: string | null,
      basis_of_record?: Array< string > | null,
      bibliographic_citation?: Array< string > | null,
      conforms_to?: Array< string > | null,
      contributor?: Array< string > | null,
      coverage?: Array< string > | null,
      create_date?: string | null,
      created?: Array< string > | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      date?: Array< string > | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      download_link?: Array< string > | null,
      end_date?: string | null,
      explicit?: boolean | null,
      extent?: Array< string > | null,
      format?: Array< string > | null,
      has_format?: Array< string > | null,
      has_part?: Array< string > | null,
      has_version?: Array< string > | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_format_of?: Array< string > | null,
      is_part_of?: Array< string > | null,
      is_version_of?: Array< string > | null,
      item_category: string,
      language?: Array< string > | null,
      license?: Array< string > | null,
      location?: Array< string > | null,
      manifest_file_characterization?: string | null,
      manifest_url?: string | null,
      medium?: Array< string > | null,
      modified_date?: string | null,
      other_identifier?: Array< string > | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      publisher?: Array< string > | null,
      references?: Array< string > | null,
      relation?: Array< string > | null,
      repository?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      tags?: Array< string > | null,
      temporal?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      type?: Array< string > | null,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionArchivesId?: string | null,
      archiveCollectionId?: string | null,
    } | null > | null,
    nextToken?: string | null,
    total?: number | null,
  } | null,
};

export type GetCollectionQueryVariables = {
  id: string,
};

export type GetCollectionQuery = {
  getCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type ListCollectionsQueryVariables = {
  filter?: ModelCollectionFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListCollectionsQuery = {
  listCollections?:  {
    __typename: "ModelCollectionConnection",
    items:  Array< {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetCollectionmapQueryVariables = {
  id: string,
};

export type GetCollectionmapQuery = {
  getCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type ListCollectionmapsQueryVariables = {
  filter?: ModelCollectionmapFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListCollectionmapsQuery = {
  listCollectionmaps?:  {
    __typename: "ModelCollectionmapConnection",
    items:  Array< {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetPageContentQueryVariables = {
  id: string,
};

export type GetPageContentQuery = {
  getPageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type ListPageContentsQueryVariables = {
  filter?: ModelPageContentFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListPageContentsQuery = {
  listPageContents?:  {
    __typename: "ModelPageContentConnection",
    items:  Array< {
      __typename: "PageContent",
      page_content_category: string,
      id: string,
      content: string,
      createdAt: string,
      updatedAt: string,
      pageContentPageContentSiteIdId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetArchiveQueryVariables = {
  id: string,
};

export type GetArchiveQuery = {
  getArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type ListArchivesQueryVariables = {
  filter?: ModelArchiveFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListArchivesQuery = {
  listArchives?:  {
    __typename: "ModelArchiveConnection",
    items:  Array< {
      __typename: "Archive",
      alternative?: Array< string > | null,
      archiveOptions?: string | null,
      basis_of_record?: Array< string > | null,
      bibliographic_citation?: Array< string > | null,
      conforms_to?: Array< string > | null,
      contributor?: Array< string > | null,
      coverage?: Array< string > | null,
      create_date?: string | null,
      created?: Array< string > | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      date?: Array< string > | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      download_link?: Array< string > | null,
      end_date?: string | null,
      explicit?: boolean | null,
      extent?: Array< string > | null,
      format?: Array< string > | null,
      has_format?: Array< string > | null,
      has_part?: Array< string > | null,
      has_version?: Array< string > | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_format_of?: Array< string > | null,
      is_part_of?: Array< string > | null,
      is_version_of?: Array< string > | null,
      item_category: string,
      language?: Array< string > | null,
      license?: Array< string > | null,
      location?: Array< string > | null,
      manifest_file_characterization?: string | null,
      manifest_url?: string | null,
      medium?: Array< string > | null,
      modified_date?: string | null,
      other_identifier?: Array< string > | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      publisher?: Array< string > | null,
      references?: Array< string > | null,
      relation?: Array< string > | null,
      repository?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      tags?: Array< string > | null,
      temporal?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      type?: Array< string > | null,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionArchivesId?: string | null,
      archiveCollectionId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetEmbargoQueryVariables = {
  id: string,
};

export type GetEmbargoQuery = {
  getEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type ListEmbargosQueryVariables = {
  filter?: ModelEmbargoFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListEmbargosQuery = {
  listEmbargos?:  {
    __typename: "ModelEmbargoConnection",
    items:  Array< {
      __typename: "Embargo",
      id: string,
      identifier: string,
      start_date?: string | null,
      end_date?: string | null,
      note?: string | null,
      record_type: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetSiteQueryVariables = {
  id: string,
};

export type GetSiteQuery = {
  getSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type ListSitesQueryVariables = {
  filter?: ModelSiteFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListSitesQuery = {
  listSites?:  {
    __typename: "ModelSiteConnection",
    items:  Array< {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type GetHistoryQueryVariables = {
  id: string,
};

export type GetHistoryQuery = {
  getHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type ListHistoriesQueryVariables = {
  filter?: ModelHistoryFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ListHistoriesQuery = {
  listHistories?:  {
    __typename: "ModelHistoryConnection",
    items:  Array< {
      __typename: "History",
      event: string,
      groups: Array< string | null >,
      id: string,
      siteID: string,
      userEmail: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type CollectionByIdentifierQueryVariables = {
  identifier: string,
  sortDirection?: ModelSortDirection | null,
  filter?: ModelCollectionFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type CollectionByIdentifierQuery = {
  collectionByIdentifier?:  {
    __typename: "ModelCollectionConnection",
    items:  Array< {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type ArchiveByIdentifierQueryVariables = {
  identifier: string,
  sortDirection?: ModelSortDirection | null,
  filter?: ModelArchiveFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type ArchiveByIdentifierQuery = {
  archiveByIdentifier?:  {
    __typename: "ModelArchiveConnection",
    items:  Array< {
      __typename: "Archive",
      alternative?: Array< string > | null,
      archiveOptions?: string | null,
      basis_of_record?: Array< string > | null,
      bibliographic_citation?: Array< string > | null,
      conforms_to?: Array< string > | null,
      contributor?: Array< string > | null,
      coverage?: Array< string > | null,
      create_date?: string | null,
      created?: Array< string > | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      date?: Array< string > | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      download_link?: Array< string > | null,
      end_date?: string | null,
      explicit?: boolean | null,
      extent?: Array< string > | null,
      format?: Array< string > | null,
      has_format?: Array< string > | null,
      has_part?: Array< string > | null,
      has_version?: Array< string > | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_format_of?: Array< string > | null,
      is_part_of?: Array< string > | null,
      is_version_of?: Array< string > | null,
      item_category: string,
      language?: Array< string > | null,
      license?: Array< string > | null,
      location?: Array< string > | null,
      manifest_file_characterization?: string | null,
      manifest_url?: string | null,
      medium?: Array< string > | null,
      modified_date?: string | null,
      other_identifier?: Array< string > | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      publisher?: Array< string > | null,
      references?: Array< string > | null,
      relation?: Array< string > | null,
      repository?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      tags?: Array< string > | null,
      temporal?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      type?: Array< string > | null,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionArchivesId?: string | null,
      archiveCollectionId?: string | null,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type EmbargosByStart_dateQueryVariables = {
  start_date: string,
  sortDirection?: ModelSortDirection | null,
  filter?: ModelEmbargoFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type EmbargosByStart_dateQuery = {
  embargosByStart_date?:  {
    __typename: "ModelEmbargoConnection",
    items:  Array< {
      __typename: "Embargo",
      id: string,
      identifier: string,
      start_date?: string | null,
      end_date?: string | null,
      note?: string | null,
      record_type: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type EmbargosByEnd_dateQueryVariables = {
  end_date: string,
  sortDirection?: ModelSortDirection | null,
  filter?: ModelEmbargoFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type EmbargosByEnd_dateQuery = {
  embargosByEnd_date?:  {
    __typename: "ModelEmbargoConnection",
    items:  Array< {
      __typename: "Embargo",
      id: string,
      identifier: string,
      start_date?: string | null,
      end_date?: string | null,
      note?: string | null,
      record_type: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type SiteBySiteIdQueryVariables = {
  siteId: string,
  sortDirection?: ModelSortDirection | null,
  filter?: ModelSiteFilterInput | null,
  limit?: number | null,
  nextToken?: string | null,
};

export type SiteBySiteIdQuery = {
  siteBySiteId?:  {
    __typename: "ModelSiteConnection",
    items:  Array< {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null >,
    nextToken?: string | null,
  } | null,
};

export type OnCreateCollectionSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionFilterInput | null,
};

export type OnCreateCollectionSubscription = {
  onCreateCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type OnUpdateCollectionSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionFilterInput | null,
};

export type OnUpdateCollectionSubscription = {
  onUpdateCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type OnDeleteCollectionSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionFilterInput | null,
};

export type OnDeleteCollectionSubscription = {
  onDeleteCollection?:  {
    __typename: "Collection",
    bibliographic_citation?: Array< string > | null,
    collection_category: string,
    collectionmap_id?: string | null,
    collectionOptions?: string | null,
    create_date?: string | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    end_date?: string | null,
    explicit_content?: boolean | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_part_of?: Array< string > | null,
    language?: Array< string > | null,
    location?: Array< string > | null,
    modified_date?: string | null,
    ownerinfo?: string | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    relation?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    visibility: boolean,
    collectionmap?:  {
      __typename: "Collectionmap",
      collectionmap_category: string,
      collection_id: string,
      create_date?: string | null,
      id: string,
      map_object: string,
      modified_date?: string | null,
      createdAt: string,
      updatedAt: string,
      collectionmapCollectionId?: string | null,
    } | null,
    archives?:  {
      __typename: "ModelArchiveConnection",
      nextToken?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionCollectionmapId?: string | null,
  } | null,
};

export type OnCreateCollectionmapSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionmapFilterInput | null,
};

export type OnCreateCollectionmapSubscription = {
  onCreateCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type OnUpdateCollectionmapSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionmapFilterInput | null,
};

export type OnUpdateCollectionmapSubscription = {
  onUpdateCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type OnDeleteCollectionmapSubscriptionVariables = {
  filter?: ModelSubscriptionCollectionmapFilterInput | null,
};

export type OnDeleteCollectionmapSubscription = {
  onDeleteCollectionmap?:  {
    __typename: "Collectionmap",
    collectionmap_category: string,
    collection_id: string,
    create_date?: string | null,
    id: string,
    map_object: string,
    modified_date?: string | null,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionmapCollectionId?: string | null,
  } | null,
};

export type OnCreatePageContentSubscriptionVariables = {
  filter?: ModelSubscriptionPageContentFilterInput | null,
};

export type OnCreatePageContentSubscription = {
  onCreatePageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type OnUpdatePageContentSubscriptionVariables = {
  filter?: ModelSubscriptionPageContentFilterInput | null,
};

export type OnUpdatePageContentSubscription = {
  onUpdatePageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type OnDeletePageContentSubscriptionVariables = {
  filter?: ModelSubscriptionPageContentFilterInput | null,
};

export type OnDeletePageContentSubscription = {
  onDeletePageContent?:  {
    __typename: "PageContent",
    page_content_category: string,
    id: string,
    content: string,
    pageContentSiteId?:  {
      __typename: "Site",
      analyticsID?: string | null,
      assetBasePath?: string | null,
      browseCollections: string,
      contact: Array< string >,
      displayedAttributes: string,
      groups: Array< string | null >,
      homePage: string,
      id: string,
      lang?: string | null,
      miradorOptions?: string | null,
      searchPage: string,
      siteColor?: string | null,
      siteId: string,
      siteName: string,
      siteOptions?: string | null,
      sitePages?: string | null,
      siteTitle: string,
      createdAt: string,
      updatedAt: string,
    } | null,
    createdAt: string,
    updatedAt: string,
    pageContentPageContentSiteIdId?: string | null,
  } | null,
};

export type OnCreateArchiveSubscriptionVariables = {
  filter?: ModelSubscriptionArchiveFilterInput | null,
};

export type OnCreateArchiveSubscription = {
  onCreateArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type OnUpdateArchiveSubscriptionVariables = {
  filter?: ModelSubscriptionArchiveFilterInput | null,
};

export type OnUpdateArchiveSubscription = {
  onUpdateArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type OnDeleteArchiveSubscriptionVariables = {
  filter?: ModelSubscriptionArchiveFilterInput | null,
};

export type OnDeleteArchiveSubscription = {
  onDeleteArchive?:  {
    __typename: "Archive",
    alternative?: Array< string > | null,
    archiveOptions?: string | null,
    basis_of_record?: Array< string > | null,
    bibliographic_citation?: Array< string > | null,
    conforms_to?: Array< string > | null,
    contributor?: Array< string > | null,
    coverage?: Array< string > | null,
    create_date?: string | null,
    created?: Array< string > | null,
    creator?: Array< string > | null,
    custom_key?: string | null,
    date?: Array< string > | null,
    description?: Array< string > | null,
    display_date?: Array< string > | null,
    download_link?: Array< string > | null,
    end_date?: string | null,
    explicit?: boolean | null,
    extent?: Array< string > | null,
    format?: Array< string > | null,
    has_format?: Array< string > | null,
    has_part?: Array< string > | null,
    has_version?: Array< string > | null,
    heirarchy_path?: Array< string > | null,
    id: string,
    identifier: string,
    is_format_of?: Array< string > | null,
    is_part_of?: Array< string > | null,
    is_version_of?: Array< string > | null,
    item_category: string,
    language?: Array< string > | null,
    license?: Array< string > | null,
    location?: Array< string > | null,
    manifest_file_characterization?: string | null,
    manifest_url?: string | null,
    medium?: Array< string > | null,
    modified_date?: string | null,
    other_identifier?: Array< string > | null,
    parent_collection?: Array< string > | null,
    provenance?: Array< string > | null,
    publisher?: Array< string > | null,
    references?: Array< string > | null,
    relation?: Array< string > | null,
    repository?: Array< string > | null,
    rights_holder?: Array< string > | null,
    rights?: Array< string > | null,
    source?: Array< string > | null,
    spatial?: Array< string > | null,
    start_date?: string | null,
    subject?: Array< string > | null,
    tags?: Array< string > | null,
    temporal?: Array< string > | null,
    thumbnail_path?: string | null,
    title: string,
    type?: Array< string > | null,
    visibility: boolean,
    collection?:  {
      __typename: "Collection",
      bibliographic_citation?: Array< string > | null,
      collection_category: string,
      collectionmap_id?: string | null,
      collectionOptions?: string | null,
      create_date?: string | null,
      creator?: Array< string > | null,
      custom_key?: string | null,
      description?: Array< string > | null,
      display_date?: Array< string > | null,
      end_date?: string | null,
      explicit_content?: boolean | null,
      heirarchy_path?: Array< string > | null,
      id: string,
      identifier: string,
      is_part_of?: Array< string > | null,
      language?: Array< string > | null,
      location?: Array< string > | null,
      modified_date?: string | null,
      ownerinfo?: string | null,
      parent_collection?: Array< string > | null,
      provenance?: Array< string > | null,
      relation?: Array< string > | null,
      rights_holder?: Array< string > | null,
      rights?: Array< string > | null,
      source?: Array< string > | null,
      spatial?: Array< string > | null,
      start_date?: string | null,
      subject?: Array< string > | null,
      thumbnail_path?: string | null,
      title: string,
      visibility: boolean,
      createdAt: string,
      updatedAt: string,
      collectionCollectionmapId?: string | null,
    } | null,
    createdAt: string,
    updatedAt: string,
    collectionArchivesId?: string | null,
    archiveCollectionId?: string | null,
  } | null,
};

export type OnCreateEmbargoSubscriptionVariables = {
  filter?: ModelSubscriptionEmbargoFilterInput | null,
};

export type OnCreateEmbargoSubscription = {
  onCreateEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnUpdateEmbargoSubscriptionVariables = {
  filter?: ModelSubscriptionEmbargoFilterInput | null,
};

export type OnUpdateEmbargoSubscription = {
  onUpdateEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnDeleteEmbargoSubscriptionVariables = {
  filter?: ModelSubscriptionEmbargoFilterInput | null,
};

export type OnDeleteEmbargoSubscription = {
  onDeleteEmbargo?:  {
    __typename: "Embargo",
    id: string,
    identifier: string,
    start_date?: string | null,
    end_date?: string | null,
    note?: string | null,
    record_type: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnCreateSiteSubscriptionVariables = {
  filter?: ModelSubscriptionSiteFilterInput | null,
};

export type OnCreateSiteSubscription = {
  onCreateSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnUpdateSiteSubscriptionVariables = {
  filter?: ModelSubscriptionSiteFilterInput | null,
};

export type OnUpdateSiteSubscription = {
  onUpdateSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnDeleteSiteSubscriptionVariables = {
  filter?: ModelSubscriptionSiteFilterInput | null,
};

export type OnDeleteSiteSubscription = {
  onDeleteSite?:  {
    __typename: "Site",
    analyticsID?: string | null,
    assetBasePath?: string | null,
    browseCollections: string,
    contact: Array< string >,
    displayedAttributes: string,
    groups: Array< string | null >,
    homePage: string,
    id: string,
    lang?: string | null,
    miradorOptions?: string | null,
    searchPage: string,
    siteColor?: string | null,
    siteId: string,
    siteName: string,
    siteOptions?: string | null,
    sitePages?: string | null,
    siteTitle: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnCreateHistorySubscriptionVariables = {
  filter?: ModelSubscriptionHistoryFilterInput | null,
};

export type OnCreateHistorySubscription = {
  onCreateHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnUpdateHistorySubscriptionVariables = {
  filter?: ModelSubscriptionHistoryFilterInput | null,
};

export type OnUpdateHistorySubscription = {
  onUpdateHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};

export type OnDeleteHistorySubscriptionVariables = {
  filter?: ModelSubscriptionHistoryFilterInput | null,
};

export type OnDeleteHistorySubscription = {
  onDeleteHistory?:  {
    __typename: "History",
    event: string,
    groups: Array< string | null >,
    id: string,
    siteID: string,
    userEmail: string,
    createdAt: string,
    updatedAt: string,
  } | null,
};
