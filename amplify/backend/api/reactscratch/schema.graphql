# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

union GenericRecordType = Collection | Archive

interface GenericRecord {
  bibliographic_citation: [String!]
  create_date: String
  creator: [String!]
  custom_key: String
  description: [String!]
  display_date: [String!]
  end_date: String
  heirarchy_path: [String!]
  id: ID!
  identifier: String!
  is_part_of: [String!]
  language: [String!]
  location: [String!]
  modified_date: String
  parent_collection: [String!]
  provenance: [String!]
  relation: [String!]
  rights_holder: [String!]
  rights: [String!]
  source: [String!]
  spatial: [String!]
  start_date: String
  subject: [String!]
  thumbnail_path: String
  title: String!
  visibility: Boolean!
}

type Collection implements GenericRecord
  @model
  @searchable
 {
  bibliographic_citation: [String!]
  collection_category: String!
  collectionmap_id: String
  collectionOptions: AWSJSON
  create_date: String
  creator: [String!]
  custom_key: String
  description: [String!]
  display_date: [String!]
  end_date: String
  explicit_content: Boolean
  heirarchy_path: [String!]
  id: ID!
  identifier: String!
    @index(name: "Identifier", queryField: "collectionByIdentifier")
  is_part_of: [String!]
  language: [String!]
  location: [String!]
  modified_date: String
  ownerinfo: AWSJSON
  parent_collection: [String!]
  provenance: [String!]
  relation: [String!]
  rights_holder: [String!]
  rights: [String!]
  source: [String!]
  spatial: [String!]
  start_date: String
  subject: [String!]
  thumbnail_path: String
  title: String!
  visibility: Boolean!
  collectionmap: Collectionmap @hasOne
  archives: [Archive] @hasMany
}

type Collectionmap
  @model
 {
  collectionmap_category: String!
  collection_id: String!
  create_date: String
  id: ID!
  map_object: String!
  modified_date: String
  collection: Collection @hasOne
}

type PageContent
  @model
 {
  page_content_category: String!
  id: ID!
  content: String!
  pageContentSiteId: Site @hasOne
}

type Archive implements GenericRecord
  @model
  @searchable
 {
  alternative: [String!]
  archiveOptions: AWSJSON
  basis_of_record: [String!]
  bibliographic_citation: [String!]
  conforms_to: [String!]
  contributor: [String!]
  coverage: [String!]
  create_date: String
  created: [String!]
  creator: [String!]
  custom_key: String
  date: [String!]
  description: [String!]
  display_date: [String!]
  download_link:[String!]
  end_date: String
  explicit: Boolean
  extent: [String!]
  format: [String!]
  has_format: [String!]
  has_part: [String!]
  has_version: [String!]
  heirarchy_path: [String!]
  id: ID!
  identifier: String!
    @index(name: "Identifier", queryField: "archiveByIdentifier")
  is_format_of: [String!]
  is_part_of: [String!]
  is_version_of: [String!]
  item_category: String!
  language: [String!]
  license: [String!]
  location: [String!]
  manifest_file_characterization: AWSJSON
  manifest_url: String
  medium: [String!]
  modified_date: String
  other_identifier: [String!]
  parent_collection: [String!]
  provenance: [String!]
  publisher: [String!]
  references: [String!]
  relation: [String!]
  repository: [String!]
  rights_holder: [String!]
  rights: [String!]
  source: [String!]
  spatial: [String!]
  start_date: String
  subject: [String!]
  tags: [String!]
  temporal: [String!]
  thumbnail_path: String
  title: String!
  type: [String!]
  visibility: Boolean!
  collection: Collection @hasOne
}

type Embargo
  @model
 {
  id: ID!
  identifier: String!
  start_date: AWSDate @index(name: "start_date_index")
  end_date: AWSDate @index(name: "end_date_index")
  note: String
  record_type: String!
}

type Site
  @model
 {
  analyticsID: String
  assetBasePath: String
  browseCollections: AWSJSON!
  contact: [AWSJSON!]!
  displayedAttributes: AWSJSON!
  groups: [String]!
  homePage: AWSJSON!
  id: ID!
  lang: String
  miradorOptions: AWSJSON
  searchPage: AWSJSON!
  siteColor: String
  siteId: String! @index(name: "SiteId", queryField: "siteBySiteId")
  siteName: String!
  siteOptions: AWSJSON
  sitePages: AWSJSON
  siteTitle: String!
}

type History
  @model
 {
  event: AWSJSON!
  groups: [String]!
  id: ID!
  siteID: ID!
  userEmail: AWSEmail!
}

type Query {
  searchGenericRecords(
    allFields: String
    sort: SearchableGenericRecordSortInput
    filter: SearchableGenericRecordFilterInput
    limit: Int
    nextToken: String
  ): SearchableGenericRecordConnection
  fulltextCollections(
    allFields: String
    filter: SearchableCollectionFilterInput
    sort: SearchableCollectionSortInput
    limit: Int
    nextToken: String
  ): SearchableCollectionConnection
  fulltextArchives(
    allFields: String
    filter: SearchableArchiveFilterInput
    sort: SearchableArchiveSortInput
    limit: Int
    nextToken: String
  ): SearchableArchiveConnection
}

type SearchableGenericRecordConnection {
  items: [GenericRecordType]
  nextToken: String
  total: Int
}

input SearchableGenericRecordFilterInput {
  id: SearchableIDFilterInput
  title: SearchableStringFilterInput
  identifier: SearchableStringFilterInput
  description: SearchableStringFilterInput
  tags: SearchableStringFilterInput
  creator: SearchableStringFilterInput
  source: SearchableStringFilterInput
  start_date: SearchableStringFilterInput
  end_date: SearchableStringFilterInput
  subject: SearchableStringFilterInput
  is_part_of: SearchableStringFilterInput
  spatial: SearchableStringFilterInput
  medium: SearchableStringFilterInput
  rights: SearchableStringFilterInput
  language: SearchableStringFilterInput
  type: SearchableStringFilterInput
  bibliographic_citation: SearchableStringFilterInput
  rights_holder: SearchableStringFilterInput
  format: SearchableStringFilterInput
  custom_key: SearchableStringFilterInput
  visibility: SearchableBooleanFilterInput
  heirarchy_path: SearchableStringFilterInput
  thumbnail_path: SearchableStringFilterInput
  parent_collection: SearchableStringFilterInput
  create_date: SearchableStringFilterInput
  modified_date: SearchableStringFilterInput
  collection_category: SearchableStringFilterInput
  item_category: SearchableStringFilterInput
  and: [SearchableGenericRecordFilterInput]
  or: [SearchableGenericRecordFilterInput]
  not: SearchableGenericRecordFilterInput
}

input SearchableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input SearchableGenericRecordSortInput {
  field: SearchableGenericRecordSortableFields
  direction: SearchableSortDirection
}

enum SearchableGenericRecordSortableFields {
  id
  title
  identifier
  description
  creator
  source
  start_date
  end_date
  subject
  spatial
  language
  custom_key
}

type SearchableCollectionConnection {
  items: [Collection]
  nextToken: String
  total: Int
}

input SearchableCollectionFilterInput {
  id: SearchableIDFilterInput
  title: SearchableStringFilterInput
  identifier: SearchableStringFilterInput
  description: SearchableStringFilterInput
  creator: SearchableStringFilterInput
  source: SearchableStringFilterInput
  start_date: SearchableStringFilterInput
  end_date: SearchableStringFilterInput
  subject: SearchableStringFilterInput
  spatial: SearchableStringFilterInput
  rights: SearchableStringFilterInput
  language: SearchableStringFilterInput
  relation: SearchableStringFilterInput
  provenance: SearchableStringFilterInput
  is_part_of: SearchableStringFilterInput
  bibliographic_citation: SearchableStringFilterInput
  rights_holder: SearchableStringFilterInput
  custom_key: SearchableStringFilterInput
  collection_category: SearchableStringFilterInput
  visibility: SearchableBooleanFilterInput
  thumbnail_path: SearchableStringFilterInput
  parent_collection: SearchableStringFilterInput
  heirarchy_path: SearchableStringFilterInput
  create_date: SearchableStringFilterInput
  modified_date: SearchableStringFilterInput
  and: [SearchableCollectionFilterInput]
  or: [SearchableCollectionFilterInput]
  not: SearchableCollectionFilterInput
}

input SearchableCollectionSortInput {
  field: SearchableCollectionSortableFields
  direction: SearchableSortDirection
}

enum SearchableCollectionSortableFields {
  id
  title
  identifier
  description
  creator
  source
  start_date
  end_date
  subject
  spatial
  rights
  language
  relation
  provenance
  is_part_of
  bibliographic_citation
  rights_holder
  custom_key
  collection_category
  visibility
  heirarchy_path
  thumbnail_path
  parent_collection
  create_date
  modified_date
}

type SearchableArchiveConnection {
  items: [Archive]
  nextToken: String
  total: Int
}

input SearchableArchiveFilterInput {
  id: SearchableIDFilterInput
  title: SearchableStringFilterInput
  identifier: SearchableStringFilterInput
  description: SearchableStringFilterInput
  tags: SearchableStringFilterInput
  creator: SearchableStringFilterInput
  source: SearchableStringFilterInput
  start_date: SearchableStringFilterInput
  end_date: SearchableStringFilterInput
  subject: SearchableStringFilterInput
  rights: SearchableStringFilterInput
  language: SearchableStringFilterInput
  type: SearchableStringFilterInput
  is_part_of: SearchableStringFilterInput
  spatial: SearchableStringFilterInput
  medium: SearchableStringFilterInput
  bibliographic_citation: SearchableStringFilterInput
  rights_holder: SearchableStringFilterInput
  format: SearchableStringFilterInput
  relation: SearchableStringFilterInput
  provenance: SearchableStringFilterInput
  repository: SearchableStringFilterInput
  references: SearchableStringFilterInput
  contributor: SearchableStringFilterInput
  custom_key: SearchableStringFilterInput
  parent_collection: SearchableStringFilterInput
  item_category: SearchableStringFilterInput
  visibility: SearchableBooleanFilterInput
  thumbnail_path: SearchableStringFilterInput
  manifest_url: SearchableStringFilterInput
  create_date: SearchableStringFilterInput
  modified_date: SearchableStringFilterInput
  heirarchy_path: SearchableStringFilterInput
  and: [SearchableArchiveFilterInput]
  or: [SearchableArchiveFilterInput]
  not: SearchableArchiveFilterInput
}

input SearchableArchiveSortInput {
  field: SearchableArchiveSortableFields
  direction: SearchableSortDirection
}

enum SearchableArchiveSortableFields {
  id
  title
  identifier
  description
  tags
  creator
  source
  start_date
  end_date
  subject
  rights
  language
  type
  is_part_of
  spatial
  medium
  bibliographic_citation
  rights_holder
  format
  relation
  provenance
  repository
  references
  contributor
  custom_key
  parent_collection
  item_category
  visibility
  heirarchy_path
  thumbnail_path
  manifest_url
  create_date
  modified_date
}

input SearchableIDFilterInput {
  ne: ID
  gt: ID
  lt: ID
  gte: ID
  lte: ID
  eq: ID
  match: ID
  matchPhrase: ID
  matchPhrasePrefix: ID
  multiMatch: ID
  exists: Boolean
  wildcard: ID
  regexp: ID
}

enum SearchableSortDirection {
  asc
  desc
}

input SearchableStringFilterInput {
  ne: String
  gt: String
  lt: String
  gte: String
  lte: String
  eq: String
  match: String
  matchPhrase: String
  matchPhrasePrefix: String
  multiMatch: String
  exists: Boolean
  wildcard: String
  regexp: String
}
